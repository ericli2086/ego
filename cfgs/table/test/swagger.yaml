components:
  schemas:
    user:
      properties:
        age:
          type: integer
        created_time:
          readOnly: true
          type: string
        deleted_time:
          readOnly: true
          type: string
        email:
          type: string
        id:
          readOnly: true
          type: integer
        phone:
          type: string
        updated_time:
          readOnly: true
          type: string
        username:
          type: string
      required: []
      type: object
    user_batch_update:
      properties:
        age:
          type: integer
        created_time:
          readOnly: true
          type: string
        deleted_time:
          readOnly: true
          type: string
        email:
          type: string
        id:
          type: integer
        phone:
          type: string
        updated_time:
          readOnly: true
          type: string
        username:
          type: string
      required:
        - id
      type: object
info:
  description: |-
    本接口对于GET列表请求支持以下查询参数格式，允许在字段名后加上双下划线（__）以使用扩展操作符：

    			【支持的查询操作符】：

    			- 字段=xxx：等于（默认操作）
    			- 字段__ne=xxx：不等于
    			- 字段__gt=xxx：大于
    			- 字段__gte=xxx：大于等于
    			- 字段__lt=xxx：小于
    			- 字段__lte=xxx：小于等于
    			- 字段__like=xxx%25：模糊匹配（需 URL 编码 % 为 %25）
    			- 字段__icontains=xxx：不区分大小写包含（转换为 LOWER LIKE）
    			- 字段__in=a,b,c：在指定列表中匹配
    			- 字段__isnull=true|false：判断字段是否为 NULL
    			- 字段__between=a,b：字段值在 a 与 b 之间（包含边界）

    			【分页、排序、字段筛选参数】：

    			- page=1，page_size=10：分页参数（从 1 开始）
    			- order=字段 或 order=-字段：升序/降序
    			- fields=字段1,字段2：只返回指定字段

    			【示例】：

    			- 精确查询用户：username=alice
    			- 区间查询成绩：score__between=60,90
    			- 模糊匹配邮箱：email__like=%25gmail.com
    			- 排序+分页：order=-id&page=2&page_size=10
    			
  title: Test RESTful API
  version: 1.0.0
openapi: 3.0.3
paths:
  /api/rest/test/user:
    get:
      description: 支持等值、模糊、区间、in等各种字段过滤。字段类型和参数请参考开头说明部分。
      parameters:
        - description: 返回字段，逗号分隔
          in: query
          name: fields
          schema:
            type: string
        - description: 排序，格式如 id desc
          in: query
          name: order
          schema:
            type: string
        - description: 页码
          in: query
          name: page
          schema:
            type: integer
        - description: 每页条数
          in: query
          name: page_size
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/user'
                    type: array
                  total:
                    type: integer
                type: object
          description: OK
      summary: List user records
      tags:
        - user
    post:
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/user'
              type: array
        required: true
      responses:
        "201":
          description: Created
      summary: Batch create user
      tags:
        - user
    put:
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/user_batch_update'
              type: array
        required: true
      responses:
        "200":
          description: Updated
      summary: Batch update user
      tags:
        - user
  /api/rest/test/user/{id}:
    delete:
      parameters:
        - description: 主键ID
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Deleted
      summary: Delete user by id
      tags:
        - user
    get:
      parameters:
        - description: 主键ID
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: 返回字段，逗号分隔
          in: query
          name: fields
          schema:
            type: string
        - description: 字段名称，即最末尾路径参数对应字段名称
          in: query
          name: key
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: OK
      summary: Get user by id
      tags:
        - user
    put:
      parameters:
        - description: 主键ID
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      responses:
        "200":
          description: Updated
      summary: Update user by id
      tags:
        - user
  /api/rest/test/user/batch_delete:
    post:
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          description: Deleted
      summary: Batch delete user
      tags:
        - user
tags:
  - description: ""
    name: user
